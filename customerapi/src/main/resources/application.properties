spring.application.name=customerapi
server.port=7076
spring.datasource.url=jdbc:postgresql://postgres:5432/customerdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.initialize=false
spring.datasource.driver-class-name=org.postgresql.Driver
#don't change postgres port no in docker-compose
#datasource_url=jdbc:postgresql://postgres:5432/customerdb
#datasource_username=postgres
#datasource_password=postgres
#spring.datasource.initialize=false
#datasource_driver=org.postgresql.Driver
#datasource_validationquery=select now();
#data source connection pool
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=12
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=default
spring.jpa.show-sql=true
spring.datasource.generate-unique-name=false
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#actuator
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always

#oauth2
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:7070/auth/realms/master

#keycloak.auth-server-url= http://localhost:7070/auth/realms/master/protocol/openid-connect/auth
# Keycloak Realm
#keycloak.realm= master

#authorizationUrl: http://localhost:8180/auth/realms/mytestrealm/protocol/openid-connect/auth
#tokenUrl: http://localhost:8180/auth/realms/mytestrealm/protocol/openid-connect/token
#use-pkce-with-authorization-code-grant: true


#actuator and prometheus
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
